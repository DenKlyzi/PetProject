version: "3.9"

services:
  web:
    build: .
    command: >
      sh -c "cd /app && python manage.py migrate &&
             python manage.py collectstatic --no-input &&
             poetry run gunicorn main.wsgi:application --bind 0.0.0.0:8000 --timeout 600"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - chroma_db:/app/chroma_db
    ports:
      - "8000:8000"
    env_file:
      - .env
    restart: unless-stopped
    networks:
      - app_network

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    networks:
      - app_network

  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app_network

  telegram-bot:
    container_name: telegram-bot
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
    command: sh -c "cd /app && python manage.py start_telegram_bot"
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - web
      - ollama
    networks:
      - app_network

  ollama:
    image: ollama/ollama:0.6.5
    container_name: ollama
    volumes:
      - ./ollama:/root/.ollama
    ports:
      - 11434:11434
    runtime: nvidia
    restart: unless-stopped
    networks:
      - app_network

  wiki:
    image: ghcr.io/requarks/wiki:2
    depends_on:
      - db
    environment:
      DB_TYPE: postgres
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: ${POSTGRES_USER}
      DB_PASS: ${POSTGRES_PASSWORD}
      DB_NAME: ${POSTGRES_DB}
    volumes:
      - wiki-data:/var/wiki/data
    ports:
      - "3000:3000"
    restart: unless-stopped
    networks:
      - app_network

  celery-worker:
    build: .
    command: sh -c "cd /app && poetry run celery -A main worker --loglevel=info"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
    env_file:
      - .env
    depends_on:
      - redis
      - db
    restart: unless-stopped
    networks:
      - app_network

volumes:
  pgdata:
  static_volume:
  ollama:
  wiki-data:
  chroma_db:

networks:
  app_network:
    driver: bridge
